# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# History:
#   1. 2023-02-14: Created at 2023-02-14T16:00:00Z by Quanyi Ma <eli@patch.sh>
#   2. 2024-05-07: Update the `fuse` job to install `fuse3` and `libfuse3-dev` at 2024-05-07T16:00:00Z by Xiaoyang Han <lux1an216@gmail.com>
#
#

on: [push, pull_request]

name: Base GitHub Action for Check, Test and Lints

jobs:
  setup:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: Setup for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            ./
            ./monobean
            ./scorpio

  #
  check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: Check for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/actions/install-dep.yml
        with:
          cache-key: ${{ github.run_id }}-
          platform: ${{ matrix.os }}

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  #
  clippy:
    name: Clippy for ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/actions/install-dep.yml
        with:
          cache-key: ${{ github.run_id }}-
          platform: ${{ matrix.os }}

      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin mega --bin libra
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets --all-features -- -D warnings

  #
  test:
    name: Test for ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/actions/install-dep.yml
        with:
          cache-key: ${{ github.run_id }}-
          platform: ${{ matrix.os }}

      - name: Set up git lfs
        run: |
          git lfs install
          git config --global user.email "mega@github.com"
          git config --global user.name "Mega"
          git config --global lfs.url http://localhost:8000

      - name: Build libra and mega
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin mega --bin libra

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --tests --all-features --no-fail-fast -- --nocapture

  #
  doc:
    name: Doc for ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/actions/install-dep.yml
        with:
          cache-key: ${{ github.run_id }}-
          platform: ${{ matrix.os }}
      - uses: actions-rs/cargo@v1
        with:
          command: doc

  #
  fuse:
    name: Fuse Lints
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: cd ./scorpio && cargo clippy --all-targets --all-features -- -D warnings

  #
  monobean:
    name: Test for ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    needs: setup
    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        uses: ./.github/actions/install-dep.yml
        with:
          cache-key: ${{ github.run_id }}-
          platform: ${{ matrix.os }}

      - name: Run Lints
        run: |
          cd ./monobean
          cargo fmt --all -- --check
          cargo clippy --all-targets --all-features -- -D warnings
          cargo test --all-features --no-fail-fast -- --nocapture


  moon-lint-and-build:
    name: MOON Lint & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"
          cache-dependency-path: ./moon/package.json

      - name: Install dependencies
        working-directory: ./moon
        run: pnpm i --frozen-lockfile

      - name: Run ESLint
        working-directory: ./moon
        run: pnpm run lint

      - name: Build Next.js application
        working-directory: ./moon
        run: pnpm run build
