From 3bdfb29034ba58d16539c2cb2f9cfeb636abd5ff Mon Sep 17 00:00:00 2001
From: Neon <yyk1249501542@gmail.com>
Date: Tue, 19 Nov 2024 20:19:53 +0800
Subject: [PATCH 23/24] display checkout points in mega_panel

---
 crates/mega/src/mega.rs             | 27 ++++++++++++++++++++-------
 crates/mega_panel/src/mega_panel.rs | 21 +++++++++++++++------
 2 files changed, 35 insertions(+), 13 deletions(-)

diff --git a/crates/mega/src/mega.rs b/crates/mega/src/mega.rs
index 628fe311d9..c9473097ee 100644
--- a/crates/mega/src/mega.rs
+++ b/crates/mega/src/mega.rs
@@ -62,8 +62,12 @@ impl EventEmitter<Event> for Mega {}
 
 impl Debug for Mega {
     fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
-        let lut = self.checkout_lut.keys().map(|key| key.to_path_buf()).collect::<Vec<PathBuf>>();
-        
+        let lut = self
+            .checkout_lut
+            .keys()
+            .map(|key| key.to_path_buf())
+            .collect::<Vec<PathBuf>>();
+
         write!(
             f,
             "fuse_executable: {:?}, mega_url: {}, fuse_url: {}\n\
@@ -99,7 +103,7 @@ impl Mega {
             log::error!("Mount point in setting does not exist");
             None
         };
-        
+
         Mega {
             fuse_executable,
 
@@ -141,7 +145,9 @@ impl Mega {
                     Some(config) => {
                         let _ = this.update(&mut cx, |this, cx| {
                             let path = PathBuf::from(config.config.mount_path);
-                            if (this.fuse_mounted && this.fuse_running) && this.mount_point.is_some() {
+                            if (this.fuse_mounted && this.fuse_running)
+                                && this.mount_point.is_some()
+                            {
                                 if let Some(inner) = &this.mount_point {
                                     if !inner.eq(&path) {
                                         this.mount_point = Some(path);
@@ -159,7 +165,7 @@ impl Mega {
                     }
                 }
             }
-            
+
             if let Ok(Some(info)) = checkouts.await {
                 // Check if checkout-ed paths are correct
                 let _ = this.update(&mut cx, |mega, cx| {
@@ -187,6 +193,13 @@ impl Mega {
         (self.fuse_running, self.fuse_mounted)
     }
 
+    pub fn checkout_points(&self) -> Vec<String> {
+        self.checkout_lut
+            .keys()
+            .map(|key| key.as_path().to_str().unwrap().to_string())
+            .collect()
+    }
+
     /// ## Toggle Fuse checkouts
     /// Checkout or un-checkout the paths in zed.
     /// Does nothing if fuse not running.
@@ -461,11 +474,11 @@ impl Mega {
         self.checkout_lut.remove(path);
         cx.emit(Event::FuseCheckout(None));
     }
-    
+
     pub fn mount_point(&self) -> Option<&PathBuf> {
         match self.mount_point {
             Some(ref path) => Some(path),
-            None => None
+            None => None,
         }
     }
 }
diff --git a/crates/mega_panel/src/mega_panel.rs b/crates/mega_panel/src/mega_panel.rs
index c31a341b84..69e42259b6 100644
--- a/crates/mega_panel/src/mega_panel.rs
+++ b/crates/mega_panel/src/mega_panel.rs
@@ -4,12 +4,7 @@ use db::kvp::KEY_VALUE_STORE;
 use fs::Fs;
 use gpui::private::serde_derive::{Deserialize, Serialize};
 use gpui::private::serde_json;
-use gpui::{
-    actions, div, Action, AppContext, AssetSource, AsyncWindowContext, Div, ElementId,
-    EventEmitter, FocusHandle, FocusableView, FontWeight, InteractiveElement, IntoElement, Model,
-    ParentElement, Pixels, PromptLevel, Render, SharedString, Stateful, Styled, Task, View,
-    ViewContext, VisualContext, WeakView, WindowContext,
-};
+use gpui::{actions, div, Action, AppContext, AssetSource, AsyncWindowContext, Div, Element, ElementId, EventEmitter, FocusHandle, FocusableView, FontWeight, InteractiveElement, IntoElement, Model, ParentElement, Pixels, PromptLevel, Render, SharedString, Stateful, Styled, Task, View, ViewContext, VisualContext, WeakView, WindowContext};
 use mega::Mega;
 use settings::Settings;
 use std::sync::Arc;
@@ -98,6 +93,8 @@ impl Render for MegaPanel {
             .child(horizontal_separator(cx))
             .child(self.render_status(cx))
             .child(horizontal_separator(cx))
+            .child(self.render_checkout_points(cx))
+            .child(horizontal_separator(cx))
             .child(self.render_buttons(cx));
 
         mega_panel
@@ -267,6 +264,18 @@ impl MegaPanel {
         ])
     }
 
+    fn render_checkout_points(&mut self, cx: &mut ViewContext<Self>) -> Stateful<Div> {
+        let points = self.mega_handle.read(cx).checkout_points();
+        let points: Vec<Label> = points.into_iter().map(|t| {
+            Label::new(t.to_owned()).single_line().color(Color::Ignored)
+        }).collect();
+        
+        v_flex().id("checkout_points").gap_1().text_ui(cx)
+            .child(Label::new("Checkout Points:").single_line())
+            .children(points)
+            
+    }
+
     fn render_buttons(&mut self, cx: &mut ViewContext<Self>) -> impl IntoElement {
         fn encap_btn(btn: Button) -> Div {
             div().m_1().border_1().child(btn)
-- 
2.43.0

