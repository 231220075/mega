From 7c81ad4d7c9256cf793fe15b1fd6056f9ee19f20 Mon Sep 17 00:00:00 2001
From: Neon <yyk1249501542@gmail.com>
Date: Tue, 19 Nov 2024 20:42:33 +0800
Subject: [PATCH 24/24] don't panic when failed to start fuse manually

---
 crates/mega/src/mega.rs                   | 26 ++++++++---------------
 crates/mega_panel/src/mega_panel.rs       |  2 +-
 crates/project_panel/src/project_panel.rs |  3 +--
 3 files changed, 11 insertions(+), 20 deletions(-)

diff --git a/crates/mega/src/mega.rs b/crates/mega/src/mega.rs
index c9473097ee..716dd1bcbf 100644
--- a/crates/mega/src/mega.rs
+++ b/crates/mega/src/mega.rs
@@ -9,8 +9,7 @@ use reqwest_client::ReqwestClient;
 use settings::Settings;
 use std::collections::BTreeSet;
 use std::fmt::{Debug, Formatter};
-use std::io::BufWriter;
-use std::path::{Path, PathBuf};
+use std::path::PathBuf;
 use std::process::Command;
 use std::sync::Arc;
 use std::time::Duration;
@@ -260,13 +259,12 @@ impl Mega {
     ///
     /// This function only opens up a new scorpio executable if it detects fuse not running.
     pub fn toggle_mount(&mut self, cx: &mut ModelContext<Self>) {
-        // We only start it, not stop it.
         if !self.fuse_running {
-            let _ = Command::new(self.fuse_executable.as_os_str())
-                .spawn()
-                .expect("Fuse Executable path not right");
-
-            self.update_status(cx);
+            if let Ok(_) =  Command::new(&self.fuse_executable).spawn() {
+                self.update_status(cx);
+            } else {
+                log::error!("Cannot start up fuse, check your settings");
+            }
         }
     }
 
@@ -450,10 +448,6 @@ impl Mega {
     }
 
     pub fn is_path_checkout(&self, path: &PathBuf) -> bool {
-        // FIXME this function calls every time project_panel refresh * entry numbers
-        // the PathBuf construction happens right before calling this
-        // because the trie cannot receive a Arc<Path> for finding PathBuf members.
-        // LAG?
         self.checkout_lut.get_ancestor(path).is_some()
     }
 
@@ -462,11 +456,9 @@ impl Mega {
     }
 
     pub fn mark_checkout(&mut self, cx: &mut ModelContext<Self>, path: PathBuf, inode: u64) {
-        if let Some(base) = &self.mount_point {
-            self.checkout_path.insert(hash(&path));
-            self.checkout_lut.insert(path, inode);
-            cx.emit(Event::FuseCheckout(None));
-        }
+        self.checkout_path.insert(hash(&path));
+        self.checkout_lut.insert(path, inode);
+        cx.emit(Event::FuseCheckout(None));
     }
 
     pub fn mark_commited(&mut self, cx: &mut ModelContext<Self>, path: &PathBuf) {
diff --git a/crates/mega_panel/src/mega_panel.rs b/crates/mega_panel/src/mega_panel.rs
index 69e42259b6..f294d5d5a4 100644
--- a/crates/mega_panel/src/mega_panel.rs
+++ b/crates/mega_panel/src/mega_panel.rs
@@ -4,7 +4,7 @@ use db::kvp::KEY_VALUE_STORE;
 use fs::Fs;
 use gpui::private::serde_derive::{Deserialize, Serialize};
 use gpui::private::serde_json;
-use gpui::{actions, div, Action, AppContext, AssetSource, AsyncWindowContext, Div, Element, ElementId, EventEmitter, FocusHandle, FocusableView, FontWeight, InteractiveElement, IntoElement, Model, ParentElement, Pixels, PromptLevel, Render, SharedString, Stateful, Styled, Task, View, ViewContext, VisualContext, WeakView, WindowContext};
+use gpui::{actions, div, Action, AppContext, AssetSource, AsyncWindowContext, Div, ElementId, EventEmitter, FocusHandle, FocusableView, FontWeight, InteractiveElement, IntoElement, Model, ParentElement, Pixels, PromptLevel, Render, SharedString, Stateful, Styled, Task, View, ViewContext, VisualContext, WeakView, WindowContext};
 use mega::Mega;
 use settings::Settings;
 use std::sync::Arc;
diff --git a/crates/project_panel/src/project_panel.rs b/crates/project_panel/src/project_panel.rs
index fcf0e733b1..491ea66f65 100644
--- a/crates/project_panel/src/project_panel.rs
+++ b/crates/project_panel/src/project_panel.rs
@@ -45,7 +45,6 @@ use std::{
     sync::Arc,
     time::Duration,
 };
-use std::ops::Deref;
 use theme::ThemeSettings;
 use ui::{prelude::*, v_flex, ContextMenu, Icon, Label, ListItem, Tooltip};
 use util::{maybe, ResultExt, TryFutureExt};
@@ -2311,7 +2310,7 @@ impl ProjectPanel {
                         worktree_id: snapshot.id(),
                         entry_id: entry.id,
                     };
-                    
+
                     let pb = entry.path.to_path_buf();
                     let is_checkout = self.mega.read(cx).is_path_checkout(&pb);
                     let is_checkout_root = self.mega.read(cx).is_path_checkout_root(&pb);
-- 
2.43.0

